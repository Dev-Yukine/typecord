export const DEFAULT_CLIENT_OPTIONS = {
	ws: {
		large_threshold: 250,
		compress: false,
		properties: {
			$os: process.platform,
			$browser: 'typecord',
			$device: 'typecord',
		},
		version: 7,
	},
	http: {
		version: 7,
		api: 'https://discordapp.com/api',
		cdn: 'https://cdn.discordapp.com',
		invite: 'https://discord.gg',
		userAgent: 'typecord'
	},
	shardCount: 1,
	shards: [],
	totalShardCount: 1
};

export const ENDPOINTS = {
	CHANNEL: (channelID: string) => `/channels/${channelID}`,
	CHANNEL_BULK_DELETE: (channelID: string) => `/channels/${channelID}/messages/bulk-delete`,
	CHANNEL_INVITES: (channelID: string) => `/channels/${channelID}/invites`,
	CHANNEL_MESSAGE_REACTION: (channelID: string, messageID: string, reaction: string) => `/channels/${channelID}/messages/${messageID}/reactions/${reaction}`,
	CHANNEL_MESSAGE_REACTION_USER: (channelID: string, messageID: string, reaction: string) => `/channels/${channelID}/messages/${messageID}/reactions/${reaction}`,
	CHANNEL_MESSAGE_REACTIONS: (channelID: string, messageID: string) => `/channels/${channelID}/messages/${messageID}/reactions`,
	CHANNEL_MESSAGE: (channelID: string, messageID: string) => `/channels/${channelID}/messages/${messageID}`,
	CHANNEL_MESSAGES: (channelID: string) => `/channels/${channelID}/messages`,
	CHANNEL_MESSAGES_SEARCH: (channelID: string) => `/channels/${channelID}/messages/search`,
	CHANNEL_PERMISSIO: (channelID: string, overwriteID: string) => `/channels/${channelID}/permissions/${overwriteID}`,
	CHANNEL_PERMISSIONS: (channelID: string) => `/channels/${channelID}/permissions`,
	CHANNEL_PIN: (channelID: string, messageID: string) => `/channels/${channelID}/pins/${messageID}`,
	CHANNEL_PINS: (channelID: string) => `/channels/${channelID}/pins`,
	CHANNEL_TYPING: (channelID: string) => `/channels/${channelID}/typing`,
	CHANNEL_WEBHOOKS: (channelID: string) => `/channels/${channelID}/webhooks`,
	CHANNELS: '/channels',
	GATEWAY_BOT: '/gateway/bot',
	GUILD: (guildID: string) => `/guilds/${guildID}`,
	GUILD_AUDIT_LOGS: (guildID: string) => `/guilds/${guildID}/audit-logs`,
	GUILD_BAN: (guildID: string, memberID: string) => `/guilds/${guildID}/bans/${memberID}`,
	GUILD_BANS: (guildID: string) => `/guilds/${guildID}/bans`,
	GUILD_CHANNELS: (guildID: string) => `/guilds/${guildID}/channels`,
	GUILD_EMBED: (guildID: string) => `/guilds/${guildID}/embed`,
	GUILD_EMOJI: (guildID: string, emojiID: string) => `/guilds/${guildID}/emojis/${emojiID}`,
	GUILD_EMOJIS: (guildID: string) => `/guilds/${guildID}/emojis`,
	GUILD_INTEGRATION: (guildID: string, integrationID: string) => `/guilds/${guildID}/integrations/${integrationID}`,
	GUILD_INTEGRATION_SYNC: (guildID: string, integrationID: string) => `/guilds/${guildID}/integrations/${integrationID}/sync`,
	GUILD_INTEGRATIONS: (guildID: string) => `/guilds/${guildID}/integrations`,
	GUILD_INVITES: (guildID: string) => `/guilds/${guildID}/invites`,
	GUILD_VANITY_URL: (guildID: string) => `/guilds/${guildID}/vanity-url`,
	GUILD_MEMBER: (guildID: string, memberID: string) => `/guilds/${guildID}/members/${memberID}`,
	GUILD_MEMBER_NICK: (guildID: string, memberID: string) => `/guilds/${guildID}/members/${memberID}/nick`,
	GUILD_MEMBER_ROLE: (guildID: string, memberID: string, roleID: string) => `/guilds/${guildID}/members/${memberID}/roles/${roleID}`,
	GUILD_MEMBERS: (guildID: string) => `/guilds/${guildID}/members`,
	GUILD_PRUNE: (guildID: string) => `/guilds/${guildID}/prune`,
	GUILD_ROLE: (guildID: string, roleID: string) => `/guilds/${guildID}/roles/${roleID}`,
	GUILD_ROLES: (guildID: string) => `/guilds/${guildID}/roles`,
	GUILD_VOICE_REGIONS: (guildID: string) => `/guilds/${guildID}/regions`,
	GUILD_WEBHOOKS: (guildID: string) => `/guilds/${guildID}/webhooks`,
	GUILDS: '/guilds',
	INVITE: (inviteID: string) => `/invite/${inviteID}`,
	OAUTH2_APPLICATION: (appID: string) => `/oauth2/applications/${appID}`,
	USER: (userID: string) => `/users/${userID}`,
	USER_CHANNELS: (userID: string) => `/users/${userID}/channels`,
	USER_CONNECTIONS: (userID: string) => `/users/${userID}/connections`,
	USER_GUILD: (userID: string, guildID: string) => `/users/${userID}/guilds/${guildID}`,
	USER_GUILDS: (userID: string) => `/users/${userID}/guilds`,
	USERS: '/users',
	VOICE_REGIONS: '/voice/regions',
	WEBHOOK: (hookID: string) => `/webhooks/${hookID}`,
	WEBHOOK_SLACK: (hookID: string) => `/webhooks/${hookID}/slack`,
	WEBHOOK_TOKEN: (hookID: string, token: string) => `/webhooks/${hookID}/${token}`,
	WEBHOOK_TOKEN_SLACK: (hookID: string, token: string) => `/webhooks/${hookID}/${token}/slack`
};
